First argument: concolic_test1.s
==============================loading program: concolic_test1.s==============================
instructions size: 30
==============================Concolically Executing program==============================
Let's execute until we get to concolic point...
PC: 18 push ip lr 
PC: 19 mov r0 #7 
PC: 20 mov r1 #22 
PC: 21 concolic input --> r0
input arr[0] is now 1
PC: 22 concolic input --> r1
input arr[1] is now 1
PC: 23 start concolic
BEGIN CONCOLIC
 
Saving processor state...
Initializing registers...
	

ENTERING MAIN CONCOLIC LOOP
==============================Iteration 1==============================
bl test 
push lr 
mul r2 r1 #2 
r2 is now symbolic
DOING : r1*2
RESULT : (* r1 2)
mov r5 #10 
mov r6 #100 
mov r7 #111 
mov r3 #100000 
cmp r0 r3 
bne cond_1 
bne cond_1 
CHECKING IF : r0!=100000
CHECKING IF : (distinct r0 100000)
mov r0 r5 
b end_f 
bx lr 
out r0			r0 ==> 10
end concolic
This run's path constraint was: (ast-vector
  (distinct r0 100000))
After negating last constrant, we will try to solve for: (ast-vector
  (not (distinct r0 100000)))
We found satisfying condition!
Model: (define-fun r0 () Int
  100000)
r0: modl eval --> 100000
we made r0 --> 100000
r1: modl eval --> r1
we made r1 --> 0
Current coverage = 14 lines of code
This iteration, we hit 14 new lines.
==============================Iteration 2==============================
bl test 
push lr 
mul r2 r1 #2 
r2 is now symbolic
DOING : r1*2
RESULT : (* r1 2)
mov r5 #10 
mov r6 #100 
mov r7 #111 
mov r3 #100000 
cmp r0 r3 
bne cond_1 
bne cond_1 
cmp r0 r2 
bge cond_2 
bge cond_2 
CHECKING IF : 100000!=(* r1 2)
CHECKING IF : (>= 100000 (* r1 2))
mov r0 r6 
b end_f 
bx lr 
out r0			r0 ==> 100
end concolic
This run's path constraint was: (ast-vector
  (not (distinct r0 100000))
  (>= 100000 (* r1 2)))
After negating last constrant, we will try to solve for: (ast-vector
  (not (distinct r0 100000))
  (not (>= 100000 (* r1 2))))
We found satisfying condition!
Model: (define-fun r1 () Int
  50001)
(define-fun r0 () Int
  100000)
r0: modl eval --> 100000
we made r0 --> 100000
r1: modl eval --> 50001
we made r1 --> 50001
Current coverage = 18 lines of code
This iteration, we hit 4 new lines.
==============================Iteration 3==============================
bl test 
push lr 
mul r2 r1 #2 
r2 is now symbolic
DOING : r1*2
RESULT : (* r1 2)
mov r5 #10 
mov r6 #100 
mov r7 #111 
mov r3 #100000 
cmp r0 r3 
bne cond_1 
bne cond_1 
cmp r0 r2 
bge cond_2 
bge cond_2 
CHECKING IF : 100000!=(* r1 2)
CHECKING IF : (>= 100000 (* r1 2))
b cond_3 
mov r0 r7 
b end_f 
bx lr 
out r0			r0 ==> 111
end concolic
This run's path constraint was: (ast-vector
  (not (distinct r0 100000))
  (not (>= 100000 (* r1 2)))
  (not (>= 100000 (* r1 2))))
After negating last constrant, we will try to solve for: (ast-vector
  (not (distinct r0 100000))
  (not (>= 100000 (* r1 2)))
  (not (not (>= 100000 (* r1 2)))))
We did not find satisfying condition
==============================returning==============================
